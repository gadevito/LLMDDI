# The path to the local model directory or Hugging Face repo.
model: "mlx-community/Mistral-Nemo-Instruct-2407-4bit"

# Whether or not to train (boolean)
train: true

# Directory with {train, valid, test}.jsonl files
data: "data/mistral-nemo-12b-data"

# The PRNG seed
seed: 3407

# Number of layers to fine-tune (32)
lora_layers: 8 # Riduciamo il numero dei layer a 8

# Minibatch size. 4
batch_size: 1

# Iterations to train for. Each epoch has 273 steps
iters: 1600  # Manteniamo il numero massimo di iterazioni, ma usa early stopping!

# Number of validation batches, -1 uses the entire validation set.
val_batches: 50

# Adam learning rate.(1e-5)
learning_rate: 1e-5  # Non usato dallo scheduler

resume_learning_rate: 2.5e-7 # Learning rate di ripresa abbassato

# Number of training steps between loss reporting.
steps_per_report: 10

# Number of training steps between validations.
steps_per_eval: 20

# Load path to resume training with the given adapter weights.
resume_adapter_file: "adapters/adapters_mistral-nemo-12b_3e_tuned_final/0000800_adapters.safetensors"

# Save/load path for the trained adapter weights.
adapter_path: "adapters/adapters_mistral-nemo-12b_3e_tuned_final3"

# Save the model every N iterations.
save_every: 10

# Evaluate on the test set after training
test: false

# Number of test set batches, -1 uses the entire test set.
test_batches: -1

# Maximum sequence length.
max_seq_length: 2048

# Use gradient checkpointing to reduce memory use.
grad_checkpoint: true

# LoRA parameters can only be specified in a config file
lora_parameters:
    # The layer keys to apply LoRA to.
    keys: ["self_attn.o_proj", "self_attn.k_proj", "self_attn.v_proj"] # Modifichiamo solo le matrici self_attention
    # These will be applied for the last lora_layers
    rank: 6 # Riduciamo il rank di LoRA a 6
    alpha: 32 # Manteniamo alpha
    scale: 4.0
    dropout: 0.6 # Mantenuto il dropout

weight_decay: 0.1 # Mantenuto il weight_decay

# Schedule can only be specified in a config file, uncomment to use.
lr_schedule:
    name: linear_schedule # Modifichiamo lo scheduler in linear_schedule
    arguments: [2.5e-7, 1e-8, 1500] # Learning rate iniziale basso, learning rate finale molto basso, step 1500

gradient_clip: 1.0
input_dropout: 0.1